// Включение JavaScript файла в другой JavaScript файл

// Файл main.js, в котором написана основная логика работы приложения, и файл utils.js, в котором находятся полезные функции,
// которые могут быть использованы в разных частях приложения. 
// Чтобы использовать эти функции в файле main.js, его нужно подключить.

// Использование тега script

<script src="path/to/utils.js"></script>
<script src="path/to/main.js"></script>

// Сначала подключается файл utils.js, затем — main.js. 
// Порядок подключения важен: файлы выполняются в том порядке, в котором они подключены.

// Использование модулей ES6
// Чтобы экспортировать функцию из файла utils.js, нужно добавить перед ней ключевое слово export:

export function имя-функции() {
  // сюда пишем код
}

// Затем в файле main.js можно импортировать эту функцию в верху файла над кодом:

import { имя-функции } from './utils.js';

// Использование CommonJS
// Если проект разрабатывается на Node.js, то для подключения файлов используется модульная система CommonJS. 
// В этом случае файлы подключаются с помощью функции require.

// В файле utils.js нужно экспортировать функцию с помощью module.exports:

function имя-функции() {
  // сюда пишем код
}
 
module.exports = имя-функции;

// А в файле main.js подключить её с помощью require:

var имя-функции = require('./utils.js');
 
// Включение css файла в другой css файл
// В верху файла в который импортируем пишем команду

@import "путь к файлу который импортируем";

// Включение html файла в другой html файл c помощью JS.

// Создадим файл menu.js и поместим туда ссылки, убрав их из файлов *.html.

// Поскольку мы будем включать в веб-документы скрипт JS, то и содержимое
// menu.js должно быть написано не на языке HTML, а на JavaScript.

// В JS есть метод write, который выводит на странице переданный в него текст. 
// Поэтому содержимое файла menu.js может выглядеть так:

document.write('\
  <a href="algae.html">Водоросли</a>\
  <a href="lichen.html">Лишайники</a>\
  <a href="moss.html">Моховидные</a>\
');

// Или так, если использовать свойство innerHTML (этот способ может быть предпочтительным):

document.getElementById("sidebar").innerHTML = '\
<a href="algae.html">Водоросли</a>\
<a href="lichen.html">Лишайники</a>\
<a href="moss.html">Моховидные</a>'

// Обратный слэш используется для экранирования перехода на новую строку
// (для интерпретатора JS разрыв строки перестает существовать).

// В файлах *.html в места, откуда мы убрали ссылки, добавляем наш скрипт:

<nav id="sidebar">
<script src="menu.js"></script>
</nav>

// Скрипт меняющий фон активной ссылки
// В данном случае фокус был реализован с помощью подобного скрипта в конце тела каждого html-документа:

<script type="text/javascript">
  document.querySelector(
    'a[href="lichen.html"]'
    ).style.background="White";
</script>

// Скрипт можно сделать универсальным и вынести в отдельный файл, 
// если определять текущую страницу путем извлечения имени файла из ее адреса (код будет сложнее).

// Вставка кода HTML с помощь JavaScript не приводит к изменению исходного кода страницы(В коде html их не будет)
// Интерпретатор браузера выполняет js-скрипт, на который указывает ссылка, но код страницы он не правит.

// Включение html файла в другой html файл c помощью PHP.
// PHP или другой язык программирования скрипт выполняется на стороне сервера.
// В браузер пользователя передается готовый документ, без вставок кода на языке программирования. 
// Вместо этого там находится результат выполнения этого кода(В коде html ссылки будут).

// Следующие команды в файле .htaccess позволяют обращаться к страницам сайта без их расширения *.php:

RewriteEngine On

RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME}\.php -f
RewriteRule ^(.*)$ $1.php

// В таком случае веб-страница будет выглядеть как https://ваш-домен.зона/algae. 
// Изменив имена файлов, необходимо изменить адреса в ссылках меню. 
// Пусть они хранятся в файле menu.html. 
// Так как это включаемый файл без кода на PHP, то и расширение можем оставить соответствующее содержимому.

<a href="algae">Водоросли</a>
<a href="lichen">Лишайники</a>
<a href="moss">Моховидные</a>

// В файлах веб-страниц php-включение будет выглядеть так:

<nav id="sidebar">
<?php include "menu.html"; ?>
</nav>

// Команда языка PHP здесь include "menu.html". Она приказывает вставить в документ содержимое указанного файла.
// Предваряющая ее последовательность символов <?php сообщает интерпретатору, что начинается программный код на PHP. Символы ?> 
// в конце говорят, что этот код закончился.

// Включение PHP файла в другой PHP файл.
// Включаемый код находится в файле шаблон.php
// В файле куда вставляем код в нужное место в коде, вставляем команду вызова кода: <?php include "путь к шаблон.php"; ?>